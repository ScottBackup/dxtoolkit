---
 - hosts: all

   vars:
      #dxloc: "/home/delphix/github"
      temp: "{{ dxversion | default('HEAD') }}"
      gittag: "{% if temp != 'HEAD' %} v{{ temp }} {% else %} {{ temp }}{% endif %}"


   tasks:

     - debug:
         msg: "{{ gittag }}"

     - debug:
         msg: "{{ temp }}"

     - name: Install CPAN
       sudo: yes
       environment:
        PATH: "/usr/local/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin"
       cpanm: name={{ item }}
       ignore_errors: yes
       with_items:
         - "JSON"
         - "Date::Manip"
         - "DateTime::Event::Cron::Quartz"
         - "DateTime::Format::DateParse"
         - "Crypt::CBC"
         - "Crypt::Blowfish"
         - "Text::CSV"
         - "Try::Tiny"
         - "LWP::UserAgent"
         - "Net::SSLeay"
         - "IO::Socket::SSL"
         - "LWP::Protocol::https"
         - "Filter::Crypto::Decrypt"
         - "PAR::Packer"
         - "Term::ReadKey"
         - "Log::Syslog::Fast"

     - name: dxtoolkit dirs
       file: name={{ item }} state=directory
       with_items:
         - "{{ dxout }}"
         - "{{ dxloc }}"

     - name: github checkout
       git:
         repo: https://github.com/delphix/dxtoolkit.git
         dest: "{{ dxloc }}"
         clone: yes
         version: "{{ gittag }}"
         force: yes

     - set_fact:
         outname: "dxtoolkit2-{{ temp }}-{{ system }}-installer.tar.gz"
       when: openssl is not defined

     - set_fact:
         outname: "dxtoolkit2-{{ temp }}-{{ system }}-installer-openssl.tar.gz"
       when: openssl is defined

     - name: Find dxtoolkit executable files
       find:
        paths: "{{ dxloc }}/bin"
        file_type: file
        patterns: "dx_*.pl"
       register: findfiles

     - set_fact:
         dxfiles: "{{ findfiles.files}}"

     - name: create dxtoolkit compile script
       template: src=compile_one.j2 dest="{{ dxloc }}/bin/compile_one.sh" mode=755 force=yes

     - name: no dx_syslog support
       when: no_dx_syslog == True
       file:
         state: absent
         path: "{{ dxloc }}/bin/dx_syslog.pl"

     - name: put password
       synchronize: src=dbutils.pm dest={{ dxloc }}/lib/dbutils.pm

     - name: compile
       shell: "bash -x {{dxloc}}/bin/compile_one.sh {{ temp }} | tee /tmp/compile.log"
       args:
        chdir: "{{ dxloc }}/bin/"
       register: output
       failed_when: "'ERROR' in output.stdout"

     - name: create installer
       template: src=install.j2 dest="{{ dxout }}/install.sh" mode=755 force=yes

     - name: delete a output file
       file:
        path: "{{ dxtar }}/{{ outname }}"
        state: absent

     - name: create an archive
       archive:
        dest: "{{ dxtar }}/{{ outname }}"
        format: gz
        path: "{{ dxout }}"

     - name: get toolkit
       fetch:
         src: "{{ dxtar }}/{{ outname }}"
         dest: "/mnt/c/Users/pioro/Documents/oss_delphix/dxtoolkit/tools/"
         flat: yes
