---
 - hosts: all

   vars:
      #dxloc: "/home/delphix/github"
      temp: "{{ dxversion | default('HEAD') }}"
      gittag: "{% if temp != 'HEAD' %} v{{ temp }} {% else %} {{ temp }}{% endif %}"

   tasks:

     - debug:
         msg: "{{ gittag }}"

     - debug:
         msg: "{{ temp }}"

     - name: Install CPAN
       sudo: yes
       environment:
        PATH: "/usr/local/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin"
       cpanm: name={{ item }}
       ignore_errors: yes
       with_items:
         - "JSON"
         - "Date::Manip"
         - "DateTime::Event::Cron::Quartz"
         - "DateTime::Format::DateParse"
         - "Crypt::CBC"
         - "Crypt::Blowfish"
         - "Text::CSV"
         - "Try::Tiny"
         - "LWP::UserAgent"
         - "Net::SSLeay"
         - "IO::Socket::SSL"
         - "LWP::Protocol::https"
         - "Filter::Crypto::Decrypt"
         - "PAR::Packer"
         - "Term::ReadKey"
         - "Log::Syslog::Fast"

     - name: dxtoolkit dirs
       file: name={{ item }} state=directory
       with_items:
         - "{{ dxout }}"
         - "{{ dxloc }}"

     - name: github checkout
       git:
         repo: https://github.com/delphix/dxtoolkit.git
         dest: "{{ dxloc }}"
         clone: yes
         version: "{{ gittag }}"
         force: yes

     - name: no dx_syslog support
       when: no_dx_syslog == True
       file:
         state: absent
         path: "{{ dxloc }}/bin/dx_syslog.pl"

     - name: put password
       synchronize: src=dbutils.pm dest={{ dxloc }}/lib/dbutils.pm

     #- name: remove script
     #  file: name="{{ dxloc }}/bin/compile.sh"

     - name: create script
       template: src=compile_template.j2 dest="{{ dxloc }}/bin/compile.sh" mode=755 force=yes

     - name: compile
       shell: "bash -x {{dxloc}}/bin/compile.sh {{ temp }} | tee /tmp/compile.log"
       args:
        chdir: "{{ dxloc }}/bin/"
       register: output
       failed_when: "'ERROR' in output.stdout"

     - name: get toolkit
       fetch: src={{ dxtar }}/dxtoolkit2-{{ dxversion }}-{{ system }}.tar.gz dest=/mnt/c/Users/pioro/Documents/oss_delphix/dxtoolkit/tools/ flat=yes
       when: openssl is not defined

     - name: get toolkit
       fetch: src={{ dxtar }}/dxtoolkit2-{{ dxversion }}-{{ system }}-openssl.tar.gz dest=/mnt/c/Users/pioro/Documents/oss_delphix/dxtoolkit/tools/ flat=yes
       when: openssl is defined

     - name: cleanup temp
       shell: rm -rf /u02/tmp/par*

     - name: cleanup temp2
       shell: rm -rf /tmp/par*

     - name: cleanup file
       shell: rm -rf "{{ dxtar }}/dxtoolkit2-{{ dxversion }}-{{ system }}-*.tar.gz"
